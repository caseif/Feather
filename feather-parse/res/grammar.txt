OptNewline      := (Newline)
                 | Epsilon

TypeInt         := (TypeInt8)
                 | (TypeInt16)
                 | (TypeInt32)
                 | (TypeInt64)

TypeUint        := (TypeUint8)
                 | (TypeUint16)
                 | (TypeUint32)
                 | (TypeUint64)

TypeFloat       := (TypeFloat32)
                 | (TypeFloat64)

TypeBuiltIn     := TypeInt
                 | TypeUint
                 | TypeFloat
                 | (TypeBool)
                 | (TypeChar)
                 | (TypeString)

TypeComplex     := (Identifier)

ArrayModNaught  := Expression
                 | Epsilon

ArrayModifier   := (OpenBracket) ArrayModNaught (CloseBracket)

TypeArray       := Type ArrayModifier

TupleTypes      := Type (Comma) TupleTypes
                 | Type

TypeTuple       := (OpenParen) TupleTypes (CloseParen)

Type            := TypeBuiltIn
                 | TypeComplex
                 | TypeArray
                 | TypeTuple

Literal         := (LiteralString)
                 | (LiteralInteger)
                 | (LiteralHex)
                 | (LiteralDecimal)
                 | (LiteralBoolean)
                 | (Nil)

Parenthetical   := (OpenParen) OptNewline Expression OptNewline (CloseParen)

TupleElements   := Expression (Comma) TupleElsPrime

TupleElsPrime   := Expression (Comma) TupleElsPrime
                 | Expression
                 | Epsilon

Tuple           := (OpenParen) TupleElements (CloseParen)

InitListEntries := Expression (Comma) OptNewline InitListEntries
                 | Expression
                 | Epsilon

InitList        := (OpenBrace) InitListEntries (CloseBrace)

TypeAnnotation  := (Colon) Type

DeclVar         := (DeclVarKeyword) (Identifier) TypeAnnotation
                 | (DeclVarKeyword) (Identifier)

DeclConst       := (ConstQualifier) (Identifier) TypeAnnotation

Lval            := DeclVar
                 | DeclConst
                 | (Identifier)

AccessStatic    := Primary (AccessorStatic) OptNewline (Identifier)

AccessInstanced := Primary (AccessorInstance) OptNewline (Identifier)

IndexSelector   := (OpenBracket) Expression (CloseBracket)

AccessIndexed   := Primary IndexSelector

RangeBound      := Primary

RangeExclusive  := RangeBound (RangeDelimiterExcl) RangeBound

RangeInclusive  := RangeBound (RangeDelimiterIncl) RangeBound

Range           := RangeExclusive
                 | RangeInclusive

SliceBound      := ExprOpNumAdd
                 | Epsilon

SliceExclusive  := SliceBound (RangeDelimiterExcl) SliceBound

SliceInclusive  := SliceBound (RangeDelimiterIncl) SliceBound

Slice           := SliceExclusive
                 | SliceInclusive

SliceSelector   := (OpenBracket) Slice (CloseBracket)

AccessSliced    := Primary SliceSelector

Invokable       := (Identifier)
                 | AccessStatic
                 | AccessInstanced
                 | AccessIndexed
                 | FnInvocation
                 | Parenthetical

FnParamList     := Expression FnParamListPrime
                 | Epsilon

FnParamListPrime    := (Comma) OptNewline Expression FnParamListPrime
                     | Epsilon

FnInvocation    := Invokable (OpenParen) OptNewline FnParamList OptNewline (CloseParen)

OpUnary      := (Hyphen)
              | (Not)

OpNumMult       := (Asterisk)
                 | (ForwardSlash)

OpNumAdd        := (Plus)
                 | (Hyphen)
                 | (Percent)

CmpBoolRel      := (LessThan)
                 | (LessEqual)
                 | (GreaterThan)
                 | (GreaterEqual)

CmpBoolEq       := (Equals)
                 | (NotEquals)

OpBoolAnd       := (And)

OpBoolOr        := (Or)

Primary         := (Identifier)
                 | AccessStatic
                 | AccessInstanced
                 | Literal
                 | Parenthetical
                 | FnInvocation
                 | AccessIndexed
                 | AccessSliced
                 | Tuple
                 | InitList

ExprOpUnary     := OpUnary ExprOpUnary
                 | Primary

ExprOpNumMult   := ExprOpUnary OpNumMult OptNewline ExprOpNumMult
                 | ExprOpUnary

ExprOpNumAdd    := ExprOpNumMult OpNumAdd OptNewline ExprOpNumAdd
                 | ExprOpNumMult

ExprCmpBoolRel  := ExprOpNumAdd CmpBoolRel OptNewline ExprCmpBoolRel
                 | ExprOpNumAdd

ExprCmpBoolEq   := ExprCmpBoolRel CmpBoolEq OptNewline ExprCmpBoolEq
                 | ExprCmpBoolRel

ExprOpBoolAnd   := ExprCmpBoolEq OpBoolAnd OptNewline ExprOpBoolAnd
                 | ExprCmpBoolEq

ExprOpBoolOr    := ExprOpBoolOr OpBoolOr OptNewline ExprOpBoolOr
                 | ExprOpBoolAnd

Expression      := ExprOpBoolOr

Assignment      := Lval (Assign) OptNewline Expression

Block           := (OpenBrace) StatementList (CloseBrace)

IfBlock         := (If) Expression OptNewline Block

ElseIfBlock     := (ElseIf) Expression OptNewline Block

ElseBlock       := (Else) OptNewline Block

IfChain         := IfBlock IfChainPrime

IfChainPrime    := ElseIfBlock IfChainPrime
                 | ElseBlock
                 | Epsilon

WhileLoop       := (While) Expression OptNewline Block

ForParam        := Primary
                 | Range

ForLoop         := (For) (Identifier) (In) ForParam OptNewline Block

ContinueStatement   := (Continue)

BreakStatement  := (Break)

ImportStatement := (Import) (Identifier)

FnParamDefs     := (Identifier) TypeAnnotation FnPmDefsPrime
                 | (Identifier) FnPmDefsPrime
                 | Epsilon

FnPmDefsPrime   := (Comma) OptNewline (Identifier) TypeAnnotation FnPmDefsPrime
                 | (Comma) OptNewline (Identifier) FnPmDefsPrime
                 | Epsilon

ReturnType      := (RightArrow) Type
                 | Epsilon

FunctionSig     := (FunctionDefKeyword) (Identifier) (OpenParen) OptNewline FnParamDefs OptNewline (CloseParen) OptNewline ReturnType

FunctionDef     := FunctionSig OptNewline Block

ClassFieldDef   := (Identifier) TypeAnnotation (Assign) (Expression)
                 | (Identifier) TypeAnnotation

ClassFields     := ClassFieldDef (Newline) ClassFldsPrime
                 | Epsilon

ClassFldsPrime  := ClassFieldDef (Newline) ClassFldsPrime
                 | Epsilon

ClassFunctions  := FunctionDef (Newline) ClassFnsPrime
                 | Epsilon

ClassFnsPrime   := FunctionDef (Newline) ClassFnsPrime
                 | Epsilon

ClassDef        := (ClassDefKeyword) (Identifier) OptNewline (OpenBrace) (Newline) ClassFields ClassFunctions (CloseBrace)

ReturnStatement := (Return) Expression
                 | (Return)

AnnotationBody  := (Identifier)
                 | Literal

Annotation      := (AnnotationBegin) AnnotationBody (AnnotationEnd)

Annotatable     := FunctionDef

StatementEnd    := (Newline)

StatementNaught := FunctionDef
                 | ClassDef
                 | ImportStatement
                 | FnInvocation
                 | ReturnStatement
                 | Assignment
                 | DeclVar
                 | DeclConst
                 | IfChain
                 | WhileLoop
                 | ForLoop
                 | ContinueStatement
                 | BreakStatement
                 | Block
                 | Annotation StatementEnd Annotatable

Statement       := StatementNaught StatementEnd

StatementList   := Statement StatementList
                 | StatementEnd StatementList
                 | Epsilon

Program         := StatementList
